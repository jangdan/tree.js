var Node=function(a){this.name=a;this.parent=this.depth=null;this.children=[];this.ancestors=[];this.decendants=[]};Node.prototype.addChild=function(a){a?(this.children.push(a),this.addDecendants([a]),this.addDecendants(a.decendants),a.setParent(this)):console.error("The child to add is "+a)};
Node.prototype.removeChild=function(a){a?-1==this.children.indexOf(a)?console.error("The specified child is not a child of the parent; cannot remove child"):(this.children.splice(this.children.indexOf(a),1),this.removeDecendants([a]),this.removeDecendants(a.decendants),a.removeParent(this)):console.error("The child to remove is "+a)};Node.prototype.breakBranch=function(){this.parent.removeChild(this)};Node.prototype.setParent=function(a){this.parent=a;this.depth=a.depth+1;this.addAncestors([a]);this.addAncestors(a.ancestors)};
Node.prototype.removeParent=function(a){this.parent=null;this.depth=0;this.removeAncestors([a]);this.removeAncestors(a.ancestors)};Node.prototype.addAncestors=function(a){Array.prototype.push.apply(this.ancestors,a);this.updateDepth();if(!this.isLeaf())for(i=0;i<this.children.length;++i)this.children[i].addAncestors(a)};Node.prototype.removeAncestors=function(a){for(i=0;i<a.length;++i)this.ancestors.splice(this.ancestors.indexOf(a[i]),1);this.updateDepth();if(!this.isLeaf())for(i=0;i<this.children.length;++i)this.children[i].removeAncestors(a)};
Node.prototype.updateDepth=function(){this.depth=this.parent.depth+1};Node.prototype.addDecendants=function(a){Array.prototype.push.apply(this.decendants,a);this.isRoot()||this.parent.addDecendants(a)};Node.prototype.removeDecendants=function(a){for(i=0;i<a.length;++i)this.decendants.splice(this.decendants.indexOf(a[i]),1);this.isRoot()||parent.removeDecendants(a)};Node.prototype.isLeaf=function(){return!this.children.length};Node.prototype.isRoot=function(){return!this.depth};
Node.prototype.getDecendantsByName=function(a){return this.decendants.filter(function(b){return b.name===a})};Node.prototype.getDecendantByName=function(a){return this.getDecendantsByName(a)[0]};Node.prototype.getChildrenByName=function(a){return children.filter(function(b){return b.name===a})};Node.prototype.getChildByName=function(a){return this.getChildrenByName(a)[0]};var Tree=function(a){this.name=a};Tree.prototype.setRoot=function(a){this.root=a;this.root.parent=null;this.root.depth=0};
